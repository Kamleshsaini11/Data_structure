import java.util.Scanner;
class Matrix_Multi_Di_Co1
{
    public static void main(String args[])
    {
        Scanner scan=new Scanner(System.in);
        int a=0,b=0,c=0,d=0,i=0,j=0;
        System.out.println("Enter the dimension of first array");
        a=scan.nextInt();   b=scan.nextInt();
        int arr1[][]=new int[a][b];
        System.out.println("Enter the element of the first array");
        for(i=0;i<a;i++)
        {
            for(j=0;j<b;j++)
               arr1[i][j]=scan.nextInt();
        }
        System.out.println("Enter the dimension of second array");
        c=scan.nextInt();   d=scan.nextInt();
        int arr2[][]=new int[c][d];
        System.out.println("Enter the element of the second array");
        for(i=0;i<c;i++)
        {
            for(j=0;j<d;j++)
               arr2[i][j]=scan.nextInt();
        }
        // Doing same size (30 to 109)
        c=d;
        if (a!=b||a!=c)
        {
            if (a>=b&&a>=c)
            {
                int[][] temp1=new int[a][a];
                int[][] temp2=new int[a][a];
                for(i=0;i<a;i++)
                {
                    for(j=0;j<b;j++)
                        temp1[i][j]=arr1[i][j];
                    for(j=b;j<a;j++)
                        temp1[i][j]=0;
                }
                arr1=temp1;
                for(i=0;i<b;i++)
                {
                    for(j=0;j<c;j++)
                        temp2[i][j]=arr2[i][j];
                }
                for(i=b;i<a;i++)
                {
                    for(j=c;j<a;j++)
                        temp2[i][j]=0;
                }
                arr2=temp2;
            }
            else if (b>=a&&b>=c)
            {
                int[][] temp1=new int[b][b];
                int[][] temp2=new int[b][b];
                for(i=0;i<a;i++)
                {
                    for(j=0;j<b;j++)
                        temp1[i][j]=arr1[i][j];
                }
                for(i=a;i<b;i++)
                {
                    for(j=0;j<b;j++)
                       temp1[i][j]=0;
                }
                arr1=temp1;
                for(i=0;i<b;i++)
                {
                    for(j=0;j<c;j++)
                        temp2[i][j]=arr2[i][j];
                    for(j=c;j<b;j++)
                        temp2[i][j]=0;
                }
                arr2=temp2;
            }
            else
            {
                int[][] temp1=new int[c][c];
                int[][] temp2=new int[c][c];
                for(i=0;i<a;i++)
                {
                    for(j=0;j<b;j++)
                        temp1[i][j]=arr1[i][j];
                }
                for(i=a;i<c;i++)
                {
                    for(j=b;j<c;j++)
                        temp1[i][j]=0;
                }
                arr1=temp1;
                for(i=0;i<b;i++)
                {
                    for(j=0;j<c;j++)
                        temp2[i][j]=arr1[i][j];
                }
                for(i=b;i<c;i++)
                {
                    for(j=0;j<c;j++)
                        temp2[i][j]=0;
                }
                arr2=temp2;
            }
        }
        // Doing size of array in the power of 2^n(110 to 134)
        int len=arr1.length;
        int n=2;
        while(len>n)
             n=n*2;
        int[][] temp1=new int[n][n];
        int[][] temp2=new int[n][n];
        for(i=0;i<len;i++)
        {
            for(j=0;j<len;j++)
            {
                temp1[i][j]=arr1[i][j];
                temp2[i][j]=arr2[i][j];
            }
        }
        for(i=len;i<n;i++)
        {
            for(j=len;j<n;j++)
            {
                temp1[i][j]=0;
                temp2[i][j]=0;
            }
        }
        arr1=temp1;
        arr2=temp2;
        int size=arr1.length;
        Matrix_Multi_Di_Co1 obj=new Matrix_Multi_Di_Co1();
        int[][] multi_arr=new int[size][size];
        multi_arr=obj.multi(arr1,arr2,0,0,0,0,size);
        // printing output matrix
        for(i=0;i<size;i++)
        {
            for(j=0;j<size;j++)
               System.out.print(multi_arr[i][j]+" ");
            System.out.println(" ");
        }
    }
    public int[][] multi(int[][] arr1,int[][] arr2,int srf,int scf,int srs,int scs,int size)
    {
        if (size==1)
        {
           int[][] arr=new int[1][1];
           arr[0][0]=arr1[srf][scf]*arr2[srs][scs];
           return arr;
        }
        else
        {
            int[][] c=new int[size][size];
            size=size/2;
            int[][] c11=new int[size][size];
            int[][] c12=new int[size][size];
            int[][] c21=new int[size][size];
            int[][] c22=new int[size][size];
            c11=add_mat(multi(arr1,arr2,srf,scf,srs,scs,size),multi(arr1,arr2,srf,size,size,scs,size),size);
            c12=add_mat(multi(arr1,arr2,srf,scf,srs,size,size),multi(arr1,arr2,srf,size,size,size,size),size);
            c21=add_mat(multi(arr1,arr2,size,scf,srs,scs,size),multi(arr1,arr2,size,size,size,scs,size),size);
            c22=add_mat(multi(arr1,arr2,size,scf,srs,size,size),multi(arr1,arr2,size,size,size,size,size),size);
            int i=0,j=0;
            // Get c by c11,c12,c21 and c22
            for(i=0;i<size;i++)
            {
                for(j=0;j<size;j++)
                   c[i][j]=c11[i][j];
            }
            int k=0,l=0;
            for(i=0;i<size;i++)
            {
                for(j=size;j<c.length;j++)
                {
                   c[i][j]=c12[k][l];
                   l++;
                }
                k++;
            }
            k=0; l=0;
            for(i=size;i<c.length;i++)
            {
                for(j=0;j<size;j++)
                {
                   c[i][j]=c21[k][l];
                   l++;
                }
                k++;
            }
            k=0; l=0;
            for(i=size;i<c.length;i++)
            {
                for(j=size;j<c.length;j++)
                {
                   c[i][j]=c22[k][l];
                   l++;
                }
                k++;
            }
            return c;
        }
    }
    public int[][] add_mat(int[][] arr1,int[][] arr2,int size)
    {
        int[][] temp=new int[size][size];
        for(int i=0;i<size;i++)
        {
            for(int j=0;j<size;j++)
                temp[i][j]=arr1[i][j]+arr2[i][j]; 
        }
        return temp;
    }
}